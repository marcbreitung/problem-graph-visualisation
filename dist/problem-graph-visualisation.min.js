var ProblemGraphVisualisation=function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(1);Object.defineProperty(t,"Level",{enumerable:!0,get:function(){return o.Level}});var i=n(2);Object.defineProperty(t,"Canvas",{enumerable:!0,get:function(){return i.Canvas}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Level=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var o=n.nodes,i=n.nodeColor,r=n.lineColor,l=n.textColor;this.name=t,this.nodes=o,this.nodeColor=i,this.lineColor=r,this.textColor=l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();t.Canvas=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=t.element,o=t.height,i=t.width;this.element=n,this.context=this.element.getContext("2d"),this.levels=[],this.activeLevel=null,this.resize({height:o,width:i})}return o(e,[{key:"addLevel",value:function(e){-1===this.levels.indexOf(e)&&this.levels.push(e)}},{key:"resize",value:function(e){var t=e.height,n=e.width;this.element.setAttribute("height",t),this.element.setAttribute("width",n)}},{key:"update",value:function(){var e=this;this.levels.forEach(function(t){e.activeLevel=t,e.drawLevel(t)})}},{key:"drawLevel",value:function(e){var t=this;e.nodes.forEach(function(e){t.drawConnections(e)}),e.nodes.forEach(function(e){t.drawCircle({color:t.activeLevel.nodeColor,node:e,size:5})})}},{key:"drawConnections",value:function(e){var t=this;e.childs.forEach(function(n){t.drawLine({color:t.activeLevel.lineColor,from:e,size:1,to:n})})}},{key:"drawText",value:function(e){var t=e.node,n=e.text,o=e.size,i=e.color;this.context.font=o+"px Arial",this.context.fillStyle=i,this.context.fillText(n,t.position.x-4,t.position.y+4)}},{key:"drawCircle",value:function(e){var t=e.node,n=e.size,o=e.color;this.context.beginPath(),this.context.arc(t.position.x,t.position.y,n,0,2*Math.PI,!1),this.context.fillStyle=o,this.context.fill()}},{key:"drawLine",value:function(e){var t=e.from,n=e.to,o=e.size,i=e.color;this.context.beginPath(),this.context.moveTo(t.position.x,t.position.y),this.context.lineTo(n.position.x,n.position.y),this.context.lineWidth=o,this.context.strokeStyle=i,this.context.stroke()}}]),e}()}]);